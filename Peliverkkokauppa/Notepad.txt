

            /* 
             XmlDocument GamesDoc = new XmlDocument();
             XmlNode rootNode = GamesDoc.CreateElement("Games");
             GamesDoc.AppendChild(rootNode);

             //luodaan xml-peliolio
             XmlNode gameNode = GamesDoc.CreateElement("Game");

             //Määritetään uudelle pelioliolle ominaisuuksia
             XmlAttribute NameAttribute = GamesDoc.CreateAttribute("Name");
             XmlAttribute PriceAttribute = GamesDoc.CreateAttribute("Price");
             XmlAttribute GenreAttribute = GamesDoc.CreateAttribute("Genre");
             XmlAttribute ReleaseDateAttribute = GamesDoc.CreateAttribute("ReleaseDate");
             XmlAttribute DescriptionAttribute = GamesDoc.CreateAttribute("Descripton");

             XmlAttribute DeveloperAttribute = GamesDoc.CreateAttribute("Developer");
             XmlAttribute GameIDAttribute = GamesDoc.CreateAttribute("GameID");

             //Lisätään ominaisuuksiin niiden arvot

             NameAttribute.Value = GameName;
             PriceAttribute.Value = Convert.ToString(Price);
             GenreAttribute.Value = Genre;
             ReleaseDateAttribute.Value = Convert.ToString(ReleaseDate);
             DescriptionAttribute.Value = Description;
             GameIDAttribute.Value = Convert.ToString(GameID);
             DeveloperAttribute.Value = "testi";


             gameNode.Attributes.Append(NameAttribute);
             gameNode.Attributes.Append(PriceAttribute);
             gameNode.Attributes.Append(GenreAttribute);
             gameNode.Attributes.Append(ReleaseDateAttribute);
             gameNode.Attributes.Append(DescriptionAttribute);
             gameNode.Attributes.Append(GameIDAttribute);
             gameNode.Attributes.Append(DeveloperAttribute);

             rootNode.AppendChild(gameNode);

             byte[] data = Encoding.ASCII.GetBytes("test.xml");
             GamesDoc.Save(dat);
             */


            String URLString = " http://localhost:8080/valt/xmltest.xml";
            XmlTextReader reader = new XmlTextReader(URLString);
            

            while (reader.Read())
            {
                switch (reader.NodeType)
                {
                    case XmlNodeType.Element: // The node is an element.
                        Console.Write("<" + reader.Name);
                        Console.WriteLine(">");
                        break;

                    case XmlNodeType.Text: //Display the text in each element.
                        Console.WriteLine(reader.Value);
                        break;

                    case XmlNodeType.EndElement: //Display the end of the element.
                        Console.Write("</" + reader.Name);
                        Console.WriteLine(">");
                        break;
                }
            }



            /*
           var serializer = new XmlSerializer(typeof(Game));
           var path = "D:'\'K1967'\'test.xml";



           System.IO.FileStream file = System.IO.File.Create(path);
           serializer.Serialize(file, NewGame);
           */
            /*
            //Jos käyttäjä ei ole tehnyt virheitä
            try
            {
                //Luodaan kirjoittaja

                System.Xml.Serialization.XmlSerializer writer = new System.Xml.Serialization.XmlSerializer(typeof(Game));

                //polku
                string path = Convert.ToString(Directory.GetCurrentDirectory()) + "/testi.xml";
                System.IO.FileStream file = System.IO.File.Create(path);

                writer.Serialize(file, NewGame);
            }
            catch (Exception ax)
            {
                Description_input.Text = ax.Message;
            }
        */